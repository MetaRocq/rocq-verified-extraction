open Ascii
open Byte
open Byte0
open ByteCompareSpec
open CeresS
open CeresSerialize
open CeresString
open Datatypes
open List0
open Malfunction
open Nat0
open PeanoNat
open PrimFloat
open ReflectEq
open String0
open Bytestring

val _escape_ident : String.t -> String.t -> String.t

val coq_Serialize_Ident : Ident.t coq_Serialize

val coq_Serialize_int : Uint63.t coq_Serialize

val coq_Serialize_numconst : numconst coq_Serialize

val coq_Cons : atom sexp_ -> atom sexp_ -> atom sexp_

val rawapp : atom sexp_ -> string -> atom sexp_

val coq_Serialize_case : case coq_Serialize

val coq_Serialize_unary_num_op : unary_num_op coq_Serialize

val numtype_to_string : numtype -> string

val vector_type_to_string : vector_type -> string

val coq_Serialize_binary_arith_op : binary_arith_op coq_Serialize

val coq_Serialize_binary_bitwise_op : binary_bitwise_op coq_Serialize

val coq_Serialize_binary_comparison : binary_comparison coq_Serialize

val coq_Serialize_binary_num_op : binary_num_op coq_Serialize

val coq_Serialize_singleton_list : 'a1 coq_Serialize -> 'a1 list coq_Serialize

val to_sexp_t : t -> atom sexp_

val to_sexp_binding : binding -> atom sexp_

val coq_Serialize_t : t coq_Serialize

val uncapitalize_char : byte -> byte

val uncapitalize : String.t -> String.t

val encode_name : String.t -> String.t

val global_serializer : (Ident.t * t option) coq_Serialize

val coq_Serialize_program : program coq_Serialize

val coq_Serialize_module : program coq_Serialize
