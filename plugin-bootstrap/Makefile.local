CAMLFLAGS :=-thread -bin-annot -strict-sequence -w -a+1..3-4+5..8-9+10..26-27+28..39-40-41-42+43-44-45+46..47-48+49..57-58+59..66-67-68+69-70
CAMLFLAGS+=-open Metacoq_template_plugin
CAMLFLAGS+=-w -20 # Unused arguments
CAMLFLAGS+=-w -33 # Unused opens
CAMLFLAGS+=-w -32 # Unused values
CAMLFLAGS+=-w -8 # Non-exhaustive pattern-matching (due to comparison -> int translation)
CAMLPKGS+=-package coq-metacoq-template-ocaml.plugin,stdlib-shims

compile_malfunction.cmx:
	cp ../plugin/compile_malfunction.mlf compile_malfunction.mlf
	cp ../plugin/tests/primitives/*.ml* .
	ocamlopt primInt63.mli primInt63.ml float64_common.mli float64_common.ml primFloat.mli primFloat.ml
	ocamlfind opt -opaque -c  -thread -bin-annot -strict-sequence -w -a+1..3-4+5..8-9+10..26-27+28..39-40-41-42+43-44-45+46..47-48+49..57-58+59..66-67-68+69-70 \
        -open Metacoq_template_plugin -w -20  -w -33  -w -32  -w -8  -I . -I extraction  -warn-error +a-3 -package coq-core.plugins.ltac \
        -package coq-metacoq-template-ocaml.plugin,stdlib-shims -for-pack Metacoq_verified_malfunction_plugin compile_malfunction.mli
	malfunction fmt compile_malfunction.mlf > compile_malfunction_fmt.mlf
	yes | mv  compile_malfunction_fmt.mlf compile_malfunction.mlf
	./fix_primitives.sh compile_malfunction.mlf
	malfunction cmx compile_malfunction.mlf
	# ocamlopt test_add.cmx main.ml -o main
	# ./main
