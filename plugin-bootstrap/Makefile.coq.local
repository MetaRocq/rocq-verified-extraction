CAMLFLAGS :=-thread -bin-annot -strict-sequence -w -a+1..3-4+5..8-9+10..26-27+28..39-40-41-42+43-44-45+46..47-48+49..57-58+59..66-67-68+69-70
CAMLFLAGS+=-open Metacoq_template_plugin
CAMLFLAGS+=-w -20 # Unused arguments
CAMLFLAGS+=-w -33 # Unused opens
CAMLFLAGS+=-w -32 # Unused values
CAMLFLAGS+=-w -8 # Non-exhaustive pattern-matching (due to comparison -> int translation)
CAMLPKGS+=-package coq-metacoq-template-ocaml.plugin,stdlib-shims,coq-core.kernel,coq_metacoq_extraction_ocaml_ffi,coq_metacoq_extraction.plugin

axioms.ml:
	cp ../lib/axioms.ml .

axioms.cmx: axioms.ml
	ocamlfind opt -thread ${CAMLPKGS} -for-pack Metacoq_extraction_malfunction -c axioms.ml

compile_malfunction.cmx: axioms.cmx
	cp ../plugin/_build/compile_malfunction.mlf compile_malfunction.mlf
	malfunction fmt compile_malfunction.mlf > compile_malfunction_fmt.mlf
	yes | mv  compile_malfunction_fmt.mlf compile_malfunction.mlf
	# ocamlfind opt ${CAMLFLAGS} ${FINDLIBPKGS} -for-pack Metacoq_extraction_malfunction axioms.mli
	ocamlfind opt ${CAMLFLAGS} ${FINDLIBPKGS} -for-pack Metacoq_extraction_malfunction compile_malfunction.mli
	malfunction cmx -O2 -shared ${FINDLIBPKGS} -for-pack Metacoq_extraction_malfunction compile_malfunction.mlf

clean::
	rm -f compile_malfunction.cmx axioms.cmx