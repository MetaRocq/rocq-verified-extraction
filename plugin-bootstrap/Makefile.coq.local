CAMLFLAGS :=-thread -bin-annot -strict-sequence -w -a+1..3-4+5..8-9+10..26-27+28..39-40-41-42+43-44-45+46..47-48+49..57-58+59..66-67-68+69-70
CAMLFLAGS+=-open Metacoq_template_plugin
CAMLFLAGS+=-w -20 # Unused arguments
CAMLFLAGS+=-w -33 # Unused opens
CAMLFLAGS+=-w -32 # Unused values
CAMLFLAGS+=-w -8 # Non-exhaustive pattern-matching (due to comparison -> int translation)
CAMLPKGS+=-package coq-metacoq-template-ocaml.plugin,stdlib-shims,coq-core.kernel

axioms.cmx: axioms.ml
	ocamlfind opt -thread -package coq-metacoq-template-ocaml.plugin,stdlib-shims,coq-core.kernel -for-pack Metacoq_verified_malfunction_plugin -c axioms.ml

compile_malfunction.cmx: axioms.cmx
	cp ../plugin/compile_malfunction.mlf compile_malfunction.mlf
	malfunction fmt compile_malfunction.mlf > compile_malfunction_fmt.mlf
	yes | mv  compile_malfunction_fmt.mlf compile_malfunction.mlf
	# ocamlfind opt ${CAMLFLAGS} ${FINDLIBPKGS} -for-pack Metacoq_verified_malfunction_plugin axioms.mli
	ocamlfind opt ${CAMLFLAGS} ${FINDLIBPKGS} -for-pack Metacoq_verified_malfunction_plugin compile_malfunction.mli
	malfunction cmx -O2 -shared ${FINDLIBPKGS} -for-pack Metacoq_verified_malfunction_plugin compile_malfunction.mlf
